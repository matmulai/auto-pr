name: Auto PR

on:
  push:
    branches: ['**']

jobs:
  check-for-auto-pr:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'auto-pr')
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
    steps:
      - name: Check commit message
        id: check
        run: echo "should-run=true" >> $GITHUB_OUTPUT

  wait-for-actions:
    needs: check-for-auto-pr
    if: needs.check-for-auto-pr.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    outputs:
      lint-errors: ${{ steps.get-actions-status.outputs.lint-errors }}
      test-errors: ${{ steps.get-actions-status.outputs.test-errors }}
      affected-files: ${{ steps.get-actions-status.outputs.affected-files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: npm install @octokit/rest
          
      - name: Wait for and get statuses of other actions
        id: get-actions-status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          node .github/scripts/wait-for-actions.js

  fix-code:
    needs: [check-for-auto-pr, wait-for-actions]
    if: |
      needs.check-for-auto-pr.outputs.should-run == 'true' && 
      (needs.wait-for-actions.outputs.lint-errors != '{}' || needs.wait-for-actions.outputs.test-errors != '{}')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: npm install @octokit/rest axios

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
      - name: Create fix branch
        run: |
          BRANCH_NAME="auto-pr/fix-${GITHUB_SHA::8}"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          
      - name: Fix code with OpenAI
        id: fix-code
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          REPO: ${{ github.repository }}
          COMMIT_SHA: ${{ github.sha }}
          LINT_ERRORS: ${{ needs.wait-for-actions.outputs.lint-errors }}
          TEST_ERRORS: ${{ needs.wait-for-actions.outputs.test-errors }}
          AFFECTED_FILES: ${{ needs.wait-for-actions.outputs.affected-files }}
          MAX_ATTEMPTS: ${{ inputs.max-attempts || 3 }}
        run: |
          node .github/scripts/fix-code.js
          
      - name: Create Pull Request
        if: steps.fix-code.outputs.success == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "fix: Auto-fixed issues using OpenAI"
          title: "Auto-fix: Resolved issues from commit ${{ github.sha }}"
          body: |
            This PR was automatically created by the Auto-PR GitHub Action.
            
            ## Original Issues:
            ```
            ${{ steps.fix-code.outputs.original-errors }}
            ```
            
            ## Changes Made:
            ${{ steps.fix-code.outputs.changes-made }}
            
            ## Verification Results:
            ```
            ${{ steps.fix-code.outputs.verification-results }}
            ```
          branch: ${{ env.BRANCH_NAME }}
          base: ${{ github.ref_name }}

inputs:
  max-attempts:
    description: 'Maximum number of attempts to fix the code'
    required: false
    default: '3'
